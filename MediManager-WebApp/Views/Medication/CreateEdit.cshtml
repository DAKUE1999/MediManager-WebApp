@model MediManager_WebApp.Models.Medication

@{
    ViewData["Title"] = Model.ID == 0 ? "Medikament erstellen" : "Medikament bearbeiten";
}

<div class="container-fluid">
    <h1>@ViewData["Title"]</h1>

    <div class="row">
        <div class="col-md-6">
            <form asp-action="CreateEdit" method="post">
                <div asp-validation-summary="ModelOnly" class="text-danger"></div>
                <input type="hidden" asp-for="MedicationGroupID" id="selectedGroupId" />

                @if (Model.ID != 0)
                {
                    <input type="hidden" asp-for="ID" />
                }

                <div class="card">
                    <div class="card-body">
                        <div class="form-group mb-3">
                            <div class="form-group mb-3">
                                <label class="control-label">Medikamentengruppe</label>
                                <div class="input-group">
                                    <input type="text" id="selectedGroupDisplay" class="form-control" readonly
                                           placeholder="Bitte wählen Sie eine Gruppe aus"
                                           value="@(Model.MedicationGroup?.Name ?? "")" />
                                    <button type="button" class="btn btn-outline-secondary" onclick="showGroupSelector()">
                                        Auswählen
                                    </button>
                                </div>
                                <span asp-validation-for="MedicationGroupID" class="text-danger"></span>
                            </div>
                        </div>

                        <div class="form-group mb-3">
                            <label asp-for="PZN" class="control-label">PZN</label>
                            <input asp-for="PZN" class="form-control" type="text"/>
                            <span asp-validation-for="PZN" class="text-danger"></span>
                        </div>

                        <div class="form-group mb-3">
                            <label asp-for="Name" class="control-label">Name</label>
                            <input asp-for="Name" class="form-control" />
                            <span asp-validation-for="Name" class="text-danger"></span>
                        </div>

                        <div class="form-group mb-3">
                            <label asp-for="Manufacturer" class="control-label">Hersteller</label>
                            <input asp-for="Manufacturer" class="form-control" />
                            <span asp-validation-for="Manufacturer" class="text-danger"></span>
                        </div>

                        <div class="form-group mb-3">
                            <label asp-for="SAPNumber" class="control-label">SAP-Nummer</label>
                            <input asp-for="SAPNumber" class="form-control" />
                            <span asp-validation-for="SAPNumber" class="text-danger"></span>
                        </div>

                        <div class="form-group mb-3">
                            <label asp-for="SAPName" class="control-label">SAP-Name</label>
                            <input asp-for="SAPName" class="form-control" />
                            <span asp-validation-for="SAPName" class="text-danger"></span>
                        </div>

                        <div class="form-group">
                            <button type="submit" class="btn btn-primary">Speichern</button>
                            <a asp-action="Index" class="btn btn-secondary">Zurück zur Liste</a>
                        </div>
                    </div>
                </div>
            </form>
        </div>
    </div>
</div>

<!-- Modal für Gruppenauswahl -->
<div class="modal fade" id="groupSelectorModal" tabindex="-1" aria-hidden="true">
    <div class="modal-dialog modal-lg">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">Medikamentengruppe auswählen</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Schließen"></button>
            </div>
            <div class="modal-body">
                <div class="row mb-3">
                    <div class="col">
                        <input type="text" id="searchInput" class="form-control" placeholder="Suchen..." />
                    </div>
                </div>
                <div class="table-responsive">
                    <table class="table table-striped table-hover" id="groupsTable">
                        <thead>
                            <tr>
                                <th onclick="sortTable(0)">Name</th>
                                <th onclick="sortTable(1)">Versorgungsnummer</th>
                                <th onclick="sortTable(2)">Mengeneinheit</th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var group in ViewBag.MedicationGroups)
                            {
                                <tr onclick="selectGroup(@group.ID, '@group.Name')" style="cursor: pointer;">
                                    <td>@group.Name</td>
                                    <td>@group.SupplyNumber</td>
                                    <td>@group.UnitName</td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }

    <script>
        let modal;

        // Modal initialisieren
        document.addEventListener('DOMContentLoaded', function () {
            modal = new bootstrap.Modal(document.getElementById('groupSelectorModal'));
        });

        // Modal öffnen
        function showGroupSelector() {
            modal.show();
        }

        // Gruppe auswählen
        function selectGroup(id, name) {
            document.getElementById('selectedGroupId').value = id;
            document.getElementById('selectedGroupDisplay').value = name;
            modal.hide();
        }

        // Suche
        document.getElementById('searchInput').addEventListener('keyup', function() {
            const searchText = this.value.toLowerCase();
            const table = document.getElementById('groupsTable');
            const rows = table.getElementsByTagName('tbody')[0].getElementsByTagName('tr');

            for (let row of rows) {
                const cells = row.getElementsByTagName('td');
                let found = false;
                for (let cell of cells) {
                    if (cell.textContent.toLowerCase().indexOf(searchText) > -1) {
                        found = true;
                        break;
                    }
                }
                row.style.display = found ? '' : 'none';
            }
        });

        // Sortierung
        function sortTable(columnIndex) {
            const table = document.getElementById('groupsTable');
            const tbody = table.getElementsByTagName('tbody')[0];
            const rows = Array.from(tbody.getElementsByTagName('tr'));
            const direction = table.getAttribute('data-sort-dir') === 'asc' ? -1 : 1;

            rows.sort((a, b) => {
                const aValue = a.cells[columnIndex].textContent.trim();
                const bValue = b.cells[columnIndex].textContent.trim();
                return direction * aValue.localeCompare(bValue, undefined, { numeric: true });
            });

            table.setAttribute('data-sort-dir', direction === 1 ? 'asc' : 'desc');

            while (tbody.firstChild) {
                tbody.removeChild(tbody.firstChild);
            }

            tbody.append(...rows);
        }
    </script>
}
