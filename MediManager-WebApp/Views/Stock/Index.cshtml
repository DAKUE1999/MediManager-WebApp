@model IEnumerable<MediManager_WebApp.Models.ViewModels.StockViewModel>

@{
    ViewData["Title"] = $"Bestand in {ViewBag.WarehouseName}";
}

<div class="container-fluid">
    <nav aria-label="breadcrumb">
        <ol class="breadcrumb">
            <li class="breadcrumb-item"><a asp-controller="Warehouse" asp-action="Index">Lager</a></li>
            <li class="breadcrumb-item active" aria-current="page">@ViewBag.WarehouseName</li>
        </ol>
    </nav>

    <h1>@ViewData["Title"]</h1>

    @if (TempData["ErrorMessage"] != null)
    {
        <div class="alert alert-danger" role="alert">
            @TempData["ErrorMessage"]
        </div>
    }

    <p>
        <a asp-action="Create" asp-route-warehouseId="@ViewBag.WarehouseId" class="btn btn-primary">Einlagern</a>
    </p>

    <div class="table-responsive">
        <table class="table table-striped">
            <thead>
                <tr>
                    <th>Gruppe</th>
                    <th>Medikament</th>
                    <th>Regal</th>
                    <th>Charge</th>
                    <th>Seriennummer</th>
                    <th>Verfallsdatum</th>
                    <th>Menge</th>
                    <th>Aktionen</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var item in Model)
                {
                    <tr>
                        <td>@Html.DisplayFor(modelItem => item.MedicationGroupName)</td>
                        <td>@Html.DisplayFor(modelItem => item.MedicationName)</td>
                        <td>@Html.DisplayFor(modelItem => item.ShelfName)</td>
                        <td>@Html.DisplayFor(modelItem => item.Batch)</td>
                        <td>@Html.DisplayFor(modelItem => item.SerialNumber)</td>
                        <td>
                            @{
                                var today = DateTime.Today;
                                var daysUntilExpiry = (item.ExpireDate.Date - today).Days;
                                var textClass = daysUntilExpiry <= 0 ? "text-danger" :
                                               daysUntilExpiry <= 30 ? "text-warning" :
                                               "text-dark";
                            }
                            <span class="@textClass">@item.ExpireDate.ToString("dd.MM.yyyy")</span>
                        </td>
                        <td>@Html.DisplayFor(modelItem => item.Quantity)</td>
                        <td>
                            <div class="btn-group" role="group">
                                <button type="button" class="btn btn-sm btn-warning">Auslagern</button>
                                <button type="button" class="btn btn-sm btn-info">Umlagerung</button>
                            </div>
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    </div>
</div>