@model MediManager_WebApp.Models.ViewModels.StockViewModel

@{
    ViewData["Title"] = "Medikament einlagern";
}

<div class="container-fluid">
    <nav aria-label="breadcrumb">
        <ol class="breadcrumb">
            <li class="breadcrumb-item"><a asp-controller="Warehouse" asp-action="Index">Lager</a></li>
            <li class="breadcrumb-item active" aria-current="page">Einlagern</li>
        </ol>
    </nav>

    <h1>@ViewData["Title"]</h1>

    @if (TempData["ErrorMessage"] != null)
    {
        <div class="alert alert-danger" role="alert">
            @TempData["ErrorMessage"]
        </div>
    }

    @if (TempData["SuccessMessage"] != null)
    {
        <div class="alert alert-success" role="alert">
            @TempData["SuccessMessage"]
        </div>
    }

    <div class="row">
        <div class="col-md-6">
            <div class="card">
                <div class="card-body">
                    <form method="post">

                        <!-- PZN mit Prüfbutton -->
                        <div class="form-group mb-3">
                            <label asp-for="PZN" class="control-label">PZN</label>
                            <div class="input-group">
                                <input asp-for="PZN" type="text" id="pznInput" class="form-control" />
                                <button type="submit" asp-action="CheckPZN" id="checkPZNButton" class="btn btn-secondary">Prüfen</button>
                            </div>
                            <span asp-validation-for="PZN" class="text-danger"></span>
                        </div>

                        <!-- Lager -->
                        <div class="form-group mb-3">
                            <label class="control-label">Lager</label>
                            <div class="input-group">
                                <input type="text" id="selectedWarehouseDisplay" class="form-control" readonly 
                                       placeholder="Bitte wählen Sie ein Lager aus" 
                                       value="@Model?.WarehouseName" />
                                <button type="button" class="btn btn-outline-secondary" onclick="showWarehouseSelector()">
                                    Auswählen
                                </button>
                            </div>
                            <input type="hidden" asp-for="WarehouseID" id="selectedWarehouseId" />
                        </div>

                        <!-- Regal -->
                        <div class="form-group mb-3">
                            <label class="control-label">Regal</label>
                            <div class="input-group">
                                <input type="text" id="selectedShelfDisplay" class="form-control" readonly 
                                       placeholder="Bitte wählen Sie ein Regal aus" 
                                       value="@Model?.ShelfName" />
                                <button type="button" class="btn btn-outline-secondary" onclick="showShelfSelector()">
                                    Auswählen
                                </button>
                            </div>
                            <input type="hidden" asp-for="ShelfID" id="selectedShelfId" />
                        </div>

                        <!-- Charge -->
                        <div class="form-group mb-3">
                            <label class="control-label">Charge</label>
                            <input asp-for="Batch" class="form-control" />
                            <span asp-validation-for="Batch" class="text-danger"></span>
                        </div>

                        <!-- Seriennummer -->
                        <div class="form-group mb-3">
                            <label class="control-label">Seriennummer</label>
                            <input asp-for="SerialNumber" class="form-control" />
                            <span asp-validation-for="SerialNumber" class="text-danger"></span>
                        </div>

                        <!-- Verfallsdatum -->
                        <div class="form-group mb-3">
                            <label class="control-label">Verfallsdatum</label>
                            <input asp-for="ExpireDate" class="form-control" type="date" />
                            <span asp-validation-for="ExpireDate" class="text-danger"></span>
                        </div>

                        <!-- Menge -->
                        <div class="form-group mb-3">
                            <label class="control-label">Menge</label>
                            <input asp-for="Quantity" class="form-control" type="number" min="1" />
                            <span asp-validation-for="Quantity" class="text-danger"></span>
                        </div>

                        <div class="form-group">
                            <button type="submit" asp-action="Create" class="btn btn-primary">Einlagern</button>
                            <a asp-action="Index" class="btn btn-secondary">Zurück zur Liste</a>
                        </div>
                    </form>
                </div>
            </div>
        </div>
    </div>
</div>

<!-- Modal für Lagerauswahl -->
<div class="modal fade" id="warehouseSelectorModal" tabindex="-1" aria-hidden="true">
    <div class="modal-dialog modal-lg">
        <div id="warehouseModalContent">
            <!-- Wird durch AJAX gefüllt -->
        </div>
    </div>
</div>

<!-- Modal für Regalauswahl -->
<div class="modal fade" id="shelfSelectorModal" tabindex="-1" aria-hidden="true">
    <div class="modal-dialog modal-lg">
        <div id="shelfModalContent">
            <!-- Wird durch AJAX gefüllt -->
        </div>
    </div>
</div>

@section Scripts {

    <script>
        let warehouseModal, shelfModal;

        // Modal initialisieren
        document.addEventListener('DOMContentLoaded', function () {
            warehouseModal = new bootstrap.Modal(document.getElementById('warehouseSelectorModal'));
            shelfModal = new bootstrap.Modal(document.getElementById('shelfSelectorModal'));
        });

        function showWarehouseSelector() {
            const pzn = document.getElementById('pznInput').value
            fetch(`/Stock/GetWarehouses?pzn=${pzn}`)
                .then(response => response.text())
                .then(html => {
                    document.getElementById('warehouseModalContent').innerHTML = html;
                    warehouseModal.show();
                });
        }

        function showShelfSelector() {
            const warehouseId = document.getElementById('selectedWarehouseId').value;
            if (!warehouseId) {
                alert('Bitte wählen Sie zuerst ein Lager aus.');
                return;
            }
            fetch(`/Stock/GetShelves?warehouseId=${warehouseId}`)
                .then(response => response.text())
                .then(html => {
                    document.getElementById('shelfModalContent').innerHTML = html;
                    shelfModal.show();
                });
        }

        function selectWarehouse(id, name) {
            document.getElementById('selectedWarehouseId').value = id;
            document.getElementById('selectedWarehouseDisplay').value = name;
            document.getElementById('selectedShelfId').value = '';
            document.getElementById('selectedShelfDisplay').value = '';
            warehouseModal.hide();
        }

        function selectShelf(id, name) {
            document.getElementById('selectedShelfId').value = id;
            document.getElementById('selectedShelfDisplay').value = name;
            shelfModal.hide();
        }
    </script>
}