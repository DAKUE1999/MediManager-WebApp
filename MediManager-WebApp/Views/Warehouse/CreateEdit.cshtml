@model MediManager_WebApp.Models.ViewModels.WarehouseViewModel

@{
    ViewData["Title"] = Model.ID == 0 ? "Lager erstellen" : "Lager bearbeiten";
}

<div class="container-fluid">
    <h1>@ViewData["Title"]</h1>

    <form asp-action="CreateEdit" method="post">
        <div asp-validation-summary="ModelOnly" class="text-danger"></div>

        @if (Model.ID != 0)
        {
            <input type="hidden" asp-for="ID" />
        }

        <div class="row">
            <div class="col-md-6">
                <div class="card">
                    <div class="card-header">
                        <h5 class="card-title mb-0">Lager-Details</h5>
                    </div>
                    <div class="card-body">
                        <div class="form-group mb-3">
                            <label asp-for="Name" class="control-label">Name</label>
                            <input asp-for="Name" class="form-control" />
                            <span asp-validation-for="Name" class="text-danger"></span>
                        </div>

                        <div class="form-group mb-3">
                            <label asp-for="Description" class="control-label">Beschreibung</label>
                            <input asp-for="Description" class="form-control" />
                            <span asp-validation-for="Description" class="text-danger"></span>
                        </div>

                        <div class="form-group mb-3">
                            <label asp-for="Location" class="control-label">Standort</label>
                            <input asp-for="Location" class="form-control" />
                            <span asp-validation-for="Location" class="text-danger"></span>
                        </div>
                    </div>
                </div>
            </div>

            <div class="col-md-6">
                <div class="card">
                    <div class="card-header d-flex justify-content-between align-items-center">
                        <h5 class="card-title mb-0">Regale</h5>
                        <button type="button" class="btn btn-primary btn-sm" onclick="addShelf()">+ Neues Regal</button>
                    </div>
                    <div class="card-body">
                        <div class="table-responsive">
                            <table class="table" id="shelvesTable">
                                <thead>
                                    <tr>
                                        <th>Name</th>
                                        <th>Beschreibung</th>
                                        <th>Aktionen</th>
                                    </tr>
                                </thead>
                                <tbody>
                                    @for (int i = 0; i < Model.Shelves.Count; i++)
                                    {
                                        <tr>
                                            <td>
                                                <input type="hidden" name="Shelves[@i].ID" value="@Model.Shelves[i].ID" />
                                                <input type="text" class="form-control" name="Shelves[@i].Name" value="@Model.Shelves[i].Name" required />
                                            </td>
                                            <td>
                                                <input type="text" class="form-control" name="Shelves[@i].Description" value="@Model.Shelves[i].Description" />
                                            </td>
                                            <td>
                                                <button type="button" class="btn btn-danger btn-sm" onclick="removeShelf(this)">Entfernen</button>
                                            </td>
                                        </tr>
                                    }
                                </tbody>
                            </table>
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <div class="mt-3">
            <button type="submit" class="btn btn-primary">Speichern</button>
            <a asp-action="Index" class="btn btn-secondary">Zur√ºck zur Liste</a>
        </div>
    </form>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}

    <script>
        function addShelf() {
            const tbody = document.querySelector('#shelvesTable tbody');
            const index = tbody.children.length;
            const newRow = document.createElement('tr');
            
            newRow.innerHTML = `
                <td>
                    <input type="hidden" name="Shelves[${index}].ID" value="0" />
                    <input type="text" class="form-control" name="Shelves[${index}].Name" required />
                </td>
                <td>
                    <input type="text" class="form-control" name="Shelves[${index}].Description" />
                </td>
                <td>
                    <button type="button" class="btn btn-danger btn-sm" onclick="removeShelf(this)">Entfernen</button>
                </td>
            `;
            
            tbody.appendChild(newRow);
        }

        function removeShelf(button) {
            const row = button.closest('tr');
            row.remove();
            updateShelfIndices();
        }

        function updateShelfIndices() {
            const rows = document.querySelectorAll('#shelvesTable tbody tr');
            rows.forEach((row, index) => {
                row.querySelectorAll('input').forEach(input => {
                    input.name = input.name.replace(/Shelves\[\d+\]/, `Shelves[${index}]`);
                });
            });
        }
    </script>
}
